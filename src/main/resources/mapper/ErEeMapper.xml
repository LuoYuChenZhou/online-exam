<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lycz.dao.ErEeMapper">
    <resultMap id="BaseResultMap" type="com.lycz.model.ErEe">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="examiner_id" jdbcType="VARCHAR" property="examinerId"/>
        <result column="examinee_id" jdbcType="VARCHAR" property="examineeId"/>
        <result column="cur_status" jdbcType="VARCHAR" property="curStatus"/>
        <result column="his_status" jdbcType="VARCHAR" property="hisStatus"/>
        <result column="his_time" jdbcType="VARCHAR" property="hisTime"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
    </resultMap>

    <select id="getExamineeNoRelation" resultType="hashMap">
        SELECT
        ee.id AS id,
        ee.real_name AS realName,
        ee.ee_no AS eeNo,
        ee.sex AS sex,
        ee.phone AS phone,
        ee.email AS email,
        IF(re1.id IS NULL,'0','1') AS isInvited
        FROM
        examinee ee
        LEFT JOIN er_ee re1 ON re1.examiner_id = #{userId} AND re1.examinee_id = ee.id AND re1.cur_status = '2'
        WHERE
        ee.id NOT IN (
        SELECT re.examinee_id FROM er_ee re WHERE re.examiner_id = #{userId} AND re.cur_status = '3'
        )
        <if test=' searchString != null and searchString != "" '>
            AND (
                ee.real_name LIKE CONCAT('%',#{searchString},'%')
                OR ee.ee_no LIKE CONCAT('%',#{searchString},'%')
                OR ee.phone LIKE CONCAT('%',#{searchString},'%')
                )
        </if>
        ORDER BY ee.real_name
    </select>

    <select id="getInvitedList" resultType="hashMap">
        SELECT
            re.id AS erEeId,
            IFNULL( er.user_name, '' ) AS erName,
            IFNULL(
            (
            SELECT
                msg.msg
            FROM
                sys_msg msg
            WHERE
                re.examiner_id = msg.send_id
                AND re.examinee_id = msg.receive_id
                AND msg.msg_type = ( SELECT id FROM sys_dict WHERE dict_code = 'msgType' AND dict_value = 'MT_ER_RQ' )
                ORDER BY msg.create_time DESC
                LIMIT 0,1
            ),
            ''
            ) AS extraMsg
        FROM
            er_ee re
            LEFT JOIN v_user er ON re.examiner_id = er.user_id
        WHERE
            cur_status = '2'
            AND re.examinee_id = #{userId}
    </select>

    <select id="getApplyList" resultType="hashMap">
        SELECT
            re.id AS erEeId,
            IFNULL( er.user_name, '' ) AS erName,
            IFNULL(
            (
            SELECT
                msg.msg
            FROM
                sys_msg msg
            WHERE
                re.examinee_id = msg.send_id
                AND re.examiner_id = msg.receive_id
                AND msg.msg_type = ( SELECT id FROM sys_dict WHERE dict_code = 'msgType' AND dict_value = 'MT_EE_RQ' )
                ORDER BY msg.create_time DESC
                LIMIT 0,1
            ),
            ''
            ) AS extraMsg
        FROM
            er_ee re
            LEFT JOIN v_user er ON re.examinee_id = er.user_id
        WHERE
            cur_status = '1'
            AND re.examiner_id = #{userId}
    </select>

    <select id="getErListByEe" resultType="hashMap">
        SELECT
            vu.user_id AS erId,
            vu.user_name AS erName
        FROM
            er_ee re
            INNER JOIN v_user vu ON re.examiner_id = vu.user_id
        WHERE re.examinee_id = #{eeId}
        AND re.cur_status = '3'
        GROUP BY vu.user_id
    </select>

    <select id="getOtherErListByEe" resultType="hashMap">
        SELECT
        er.id AS erId,
        er.real_name AS realName,
        IF(er.sex = '0','男','女') AS sex,
        IF(re1.id IS NULL,'0','1') AS isInvited
        FROM examiner er
        LEFT JOIN er_ee re1 ON er.id = re1.examiner_id AND re1.examinee_id = #{eeId} AND re1.cur_status = '1'
        WHERE er.id NOT IN (
        SELECT re.examiner_id FROM er_ee re WHERE re.examinee_id = #{eeId} AND re.cur_status = '3'
        )
        <if test=' searchErName != "" and searchErName != null '>
            AND er.real_name LIKE CONCAT('%',#{searchErName},'%')
        </if>
        ORDER BY er.real_name
    </select>
</mapper>