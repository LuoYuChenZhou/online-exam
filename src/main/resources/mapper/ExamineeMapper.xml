<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lycz.dao.ExamineeMapper">
    <resultMap id="BaseResultMap" type="com.lycz.model.Examinee">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="login_name" jdbcType="VARCHAR" property="loginName"/>
        <result column="login_pwd" jdbcType="VARCHAR" property="loginPwd"/>
        <result column="ee_no" jdbcType="VARCHAR" property="eeNo"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="reg_time" jdbcType="TIMESTAMP" property="regTime"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
    </resultMap>
    <select id="getEeListByNameNoClass" resultType="hashMap">
        SELECT
        ee.id AS eeId,
        ee.real_name AS realName,
        ee.ee_no AS eeNo,
        ee.sex AS sex,
        ee.phone AS phone,
        ee.email AS email,
        group_concat(gr.grade_name) AS gradeNames
        FROM
        examinee ee
        LEFT JOIN ee_grade eg ON ee.id = eg.ee_id
        LEFT JOIN grade gr ON eg.grade_id = gr.id AND gr.status != '4'
        <where>
            <if test=' examineeName != null and examineeName != "" '>
             AND ee.real_name LIKE CONCAT('%',#{examineeName},'%')
            </if>
            <if test=' examineeNum != null and examineeNum != "" '>
              AND ee.ee_no LIKE CONCAT('%',#{examineeNum},'%')
            </if>
            <if test=' searchClass != null and searchClass != "" '>
            AND  gr.id = #{searchClass}
            </if>
        </where>
    </select>
</mapper>